# Generated by Django 3.2.7 on 2022-10-05 21:12

import barbillard.validators
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TB_Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'verbose_name': 'TB_Email',
                'verbose_name_plural': 'TB_Emails',
            },
        ),
        migrations.CreateModel(
            name='TB_Niveau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('INFOL1', 'LICENCE I'), ('INFOL2', 'LICENCE II'), ('INFOL3', 'LICENCE III'), ('INFOM1', 'MASTER I'), ('INFOM2', 'MASTER II'), ('ICT4DL1', 'LICENCE PRO I'), ('ICT4DL2', 'LICENCE PRO II'), ('ICT4DL3', 'LICENCE PRO III'), ('MASTERPRO', 'MASTER PRO'), ('DOCTORAT', 'DOCTORAT/PhD')], default='INFOL1', max_length=10, unique=True)),
                ('diffusion', models.EmailField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'TB_Niveau',
                'verbose_name_plural': 'TB_Niveaux',
            },
        ),
        migrations.CreateModel(
            name='TB_Partenaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(max_length=255, upload_to='Images/partenaires/')),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('site_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='Lien vers la plate forme')),
                ('active', models.BooleanField(default=True, verbose_name='Activer un partenaire')),
            ],
            options={
                'verbose_name': 'TB_Partenaire',
                'verbose_name_plural': 'TB_Partenaires',
            },
        ),
        migrations.CreateModel(
            name='TB_Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(choices=[('Mr.', 'Monsieur'), ('Mme.', 'Madame'), ('Ing.', 'Ingénieur'), ('Dr.', 'Docteur'), ('Pr.', 'Professeur')], default='Dr.', max_length=255, verbose_name='Titre')),
                ('first_name', models.CharField(max_length=255, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=255, verbose_name='Nom')),
                ('photo', models.ImageField(default='Images/Enseignants/a.jpg', max_length=255, upload_to='Images/Speaker/')),
                ('email', models.EmailField(max_length=250, unique=True, verbose_name='Adresse E-mail')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de Téléphone')),
                ('facebook_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='Lien Facebook')),
                ('linkedin_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='Lien LinkedIn')),
                ('github_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='Lien Github')),
                ('twitter_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='Lien Twitter')),
                ('site_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='Lien site perso')),
                ('biographie', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TB_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('slug', models.SlugField(help_text='Ne pas modifier ce champ !!!', max_length=255, verbose_name='Slug')),
                ('body', ckeditor.fields.RichTextField(verbose_name='Contenu')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('urgent', models.BooleanField(default=False, verbose_name='Urgent ?')),
                ('public', models.BooleanField(default=True, verbose_name='Information publique ?')),
                ('piecejointe', models.FileField(blank=True, help_text='Importez un Document au format: <em>PDF, WORD ou EXCEL</em>.', null=True, upload_to='PDF/Infos/', validators=[barbillard.validators.validate_file_extension], verbose_name='Pièce Jointe (Document)')),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to='Images/Infos/', verbose_name='Image')),
                ('video', models.FileField(blank=True, null=True, upload_to='Vidéos/Infos/', verbose_name='Video')),
                ('published', models.BooleanField(default=False, verbose_name='Publié ?')),
                ('Niveau', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='barbillard.tb_niveau', verbose_name='Niveau concerné')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TB_Information',
                'verbose_name_plural': 'TB_Informations',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TB_Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('lien', models.URLField(blank=True, max_length=2000, null=True)),
                ('piecejointe', models.FileField(blank=True, help_text='Importez un Document au format: <em>PDF, WORD ou EXCEL</em>.', null=True, upload_to='PDF/Events/', validators=[barbillard.validators.validate_file_extension], verbose_name='Pièce Jointe (Document)')),
                ('date', models.DateField(verbose_name="Date de l'évènement")),
                ('begin', models.TimeField(verbose_name='Heure de début')),
                ('lieu', models.CharField(max_length=255, verbose_name='Lieu')),
                ('image', models.ImageField(max_length=255, upload_to='Images/Events/')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('speakers', models.ManyToManyField(db_table='Presentation', to='barbillard.TB_Speaker')),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
    ]
